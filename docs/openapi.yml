openapi: 3.0.1
info:
  title: Hangzone API
  description: Hangzone API
  contact:
    name: HangForever 
    url: https://hangzone.io
    email: aaron.burdick@protonmail.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
  - url: /api
paths:
  /users/login:
    post:
      tags:
        - User and Authentication
      summary: Existing user login
      description: Login for existing user
      operationId: Login
      requestBody:
        description: Credentials to use
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserHangerRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        401:
          description: 'Not Implemented! - Unauthorized'
          content: {}
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
      x-codegen-request-body-name: body
  /users:
    post:
      tags:
        - User and Authentication
      summary: Register a new user
      description: Register a new user
      operationId: RegisterUser
      requestBody:
        description: Details of the new user to register
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserRequest'
        required: true
      responses:
        201:
          description: Not implemented! - OK
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
      x-codegen-request-body-name: body
    get:
      tags:
        - User and Authentication
      summary: Get current user
      description: Gets the currently logged-in user
      operationId: GetCurrentUser
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        401:
          description: Unauthorized
          content: {}
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
      security:
        - Token: []
    put:
      tags:
        - User and Authentication
      summary: Update current user
      description: Updated user information for current user
      operationId: UpdateCurrentUser
      requestBody:
        description: User details to update. At least **one** field is required.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        401:
          description: Unauthorized
          content: {}
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
      security:
        - Token: []
      x-codegen-request-body-name: body
  /users/location:
    put:
      tags:
        - UserHangers
      summary: Update hanger location
      description: Update a hanger's location
      operationId: UpdatePosition
      requestBody:
        description: The position to update the UserHanger to. Given as lat/lng.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Position'
        required: true
      responses:
        204:
          description: OK
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
      x-codegen-request-body-name: body
  /hangzones:
    get:
      tags:
        - Hangzones
      summary: Get Hangzones
      description: Get hangzones by some given parameters. Auth is optional
      operationId: GetHangzones
      parameters:
        - name: search
          in: query
          description: Search text to find a hangzone by similar name
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Pagination page
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleHangzonesResponse'
        401:
          description: Unauthorized
          content: {}
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
    post:
      tags:
        - Hangzones
      summary: Create a hangzone
      description: Create a hangzone. Auth is required
      operationId: CreateHangzone
      requestBody:
        description: The body of the Hangzone data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHangzoneRequest'
      requestBody:
        description: Hangzone you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHangzoneRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleHangzoneResponse'
        401:
          description: Unauthorized
          content: {}
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
  /hangzones/{slug}:
    get:
      tags:
        - Hangzones
      summary: Get Hangzone
      description: Get hangzones by slug. Auth is optional
      operationId: GetHangzone
      parameters:
        - name: slug
          in: path
          description: Slug of the hangzone
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleHangzoneResponse'
        401:
          description: Unauthorized
          content: {}
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
      security:
        - Token: []
      x-codegen-request-body-name: hangzone
  /friends:
    get:
      tags:
        - Friends
      summary: Get Friends
      description: Get a paginated list of one's own friends 
      operationId: GetFriends
      parameters:
        - name: page
          in: query
          description: Pagination page
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleFriendsResponse'
        401:
          description: Unauthorized
          content: {}
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
      security:
        - Token: []
      x-codegen-request-body-name: hangzone
  /friends/{friend_id}:
    delete:
      tags:
        - Friends
      summary: Remove friend
      description: Remove a friend
      operationId: RemoveFriend
      parameters:
        - name: friend_id
          in: path
          description: The ID of the UserHanger you wish to remove
          required: true
          schema:
            type: string
      responses:
        201:
          description: OK
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
  /requests/friends:
    get:
      responses:
        200:
          description: gives you the friend requests
  /requests/friends/{friend_id}:
    get:
      tags:
        - FriendRequests
      summary: Request a new friend
      description: Send a friend request to someone. Cannot request from a user you are already friends with. 
      operationId: RequestFriend
      parameters:
        - name: friend_id
          in: path
          description: The ID of the UserHanger you wish to to be friends with
          required: true
          schema:
            type: string
      responses:
        201:
          description: OK
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
  /requests/friends/cancel/{friend_id}:
    post:
      tags:
        - FriendRequests
      summary: Cancel a friend request 
      operationId: CancelRequestFriend
      parameters:
        - name: friend_id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: OK
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
  /requests/friends/decline/{friend_id}:
    post:
      tags:
        - FriendRequests
      summary: Decline a friend request 
      operationId: DeclineRequestFriend
      parameters:
        - name: friend_id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: OK
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
  /requests/friends/accept/{friend_id}:
    post:
      tags:
        - FriendRequests
      summary: Accept a friend request 
      operationId: AcceptRequestFriend
      parameters:
        - name: friend_id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: OK
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
  /notifications:
    get:
      tags:
        - Notifications
      summary: Get Notifications
      description: Get notifications by some given parameters. 
      operationId: GetNotifications
      parameters:
        - name: page
          in: query
          description: Pagination page
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResponse'
        401:
          description: Unauthorized
          content: {}
        422:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericErrorModel'
  /notifications/read:
    post:
      tags:
        - Notifications
      summary: Create a read notification
      description: Create a notification ackowledging that you have read a notification. Useful if you don't want to be alerted to the same notifications. 
      operationId: CreateReadNotification
      responses:
        201:
          description: OK
        401:
          description: Unauthorized
          content: {}
  /notifications/trash:
    post:
      tags:
        - Notifications
      summary: Put notification in trash
      description: Putting a notification in the trash. Data is still persisted can be seen in trashbox.
      operationId: PutNotificationInTrash
      responses:
        201:
          description: OK
        401:
          description: Unauthorized
          content: {}
components:
  schemas:
    LoginUserHanger:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          format: password
    LoginUserHangerRequest:
      required:
        - user
      type: object
      properties:
        user_hanger:
          $ref: '#/components/schemas/LoginUser'
    NewUserHanger:
      required:
        - email
        - password
        - alias
      type: object
      properties:
        alias:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
    NewUserRequest:
      required:
        - user
      type: object
      properties:
        user_hanger:
          $ref: '#/components/schemas/NewUser'
    UserHanger:
      required:
        - id
        - first_name
        - last_name
        - alias
        - status_hang
        - token
      type: object
      properties:
        id:
          type: number
        first_name:
          type: string
        last_name:
          type: string
        alias:
          type: string
        email_address:
          type: string
        status_hang:
          type: string
        status_description:
          type: string
        icon_url:
          type: string
        token:
          type: string
    UserResponse:
      required:
        - user_hanger
      type: object
      properties:
        user_hanger:
          $ref: '#/components/schemas/UserHanger'
    UpdateUserHanger:
      type: object
      properties:
        email:
          type: string
        token:
          type: string
        alias:
          type: string
        status_description:
          type: string
        image:
          type: string
    UpdateUserRequest:
      required:
        - user
      type: object
      properties:
        user_hanger:
          $ref: '#/components/schemas/UpdateUser'
    ProfileResponse:
      required:
        - profile
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/Profile'
    Profile:
      required:
        - alias
      type: object
      properties:
        alias:
          type: string
        status_description:
          type: string
        icon_url:
          type: string
    Hangzone:
      required:
        - id
        - slug
        - name
        - address1
        - city
        - country
        - createdAt
        - updatedAt
      type: object
      properties:
        id:
          type: integer
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        postalCode:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    SingleHangzoneResponse:
      required:
        - hangzone
      type: object
      properties:
        hangzone:
          $ref: '#/components/schemas/Hangzone'
    MultipleHangzonesResponse:
      required:
        - hangzones
      type: object
      properties:
        hangzones:
          type: array
          items:
            $ref: '#/components/schemas/Hangzone'
    GenericErrorModel:
      required:
        - errors
      type: object
      properties:
        errors:
          required:
            - body
          type: object
          properties:
            body:
              type: array
              items:
                type: string
    CreateHangzoneRequest:
      required:
        - name
        - address_1
        - city
        - country
        - lat
        - lng
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        address_1:
          type: string
        address_2:
          type: string
        address_3:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        postal_code:
          type: string
        lat:
          type: number
        lng:
          type: number
    Friend:
      required:
        - id
        - first_name
        - last_name
        - alias
        - status_hang
        - token
      type: object
      properties:
        id:
          type: number
        first_name:
          type: string
        last_name:
          type: string
        alias:
          type: string
        email_address:
          type: string
        status_hang:
          type: string
        status_description:
          type: string
        icon_url:
          type: string
        token:
          type: string
    MultipleFriendsResponse:
      required:
        - friends
      type: object
      properties:
        friends:
          type: array
          items:
            $ref: '#/components/schemas/Friend'
    Position:
      required:
        - lat
        - lng
      type: object
      properties:
        lat:
          type: number
        lng:
          type: number
    NotificationsResponse:
      required:
        - id
        - notification_type
        - read
        - created_at
      properties:
        id:
          type: number
        notification_type: 
          type: string
        read:
          type: boolean
        trash:
          type: boolean
        created_at:
          type: string
    HangSession:
      required:
        - id
        - name
        - description
        - hangzone_id
        - starts_at
      properties:
        id:
          type: number
        name: 
          type: string
        description:
          type: string
        hangzone_id:
          type: number
        starts_at:
          type: string
    securitySchemes:
      Token:
        type: apiKey
        description: "For accessing the protected API resources, you must have received\
          \ a a valid JWT token after registering or logging in. This JWT token must\
        \ then be used for all protected resources by passing it in via the 'Authorization'\
        \ header.\n\nA JWT token is generated by the API by either registering via\
        \ /users or logging in via /users/login.\n\nThe following format must be in\
        \ the 'Authorization' header :\n\n    Token xxxxxx.yyyyyyy.zzzzzz\n    \n"
      name: Authorization
      in: header

